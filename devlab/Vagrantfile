# -*- mode: ruby -*-
# vi: set ft=ruby :


Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/trusty64"

  config.vm.define "tsdb" do |tsdb_cfg|
    tsdb_cfg.vm.hostname = "tsdb"
    tsdb_cfg.vm.network "private_network", ip: "192.168.1.10"
    tsdb_cfg.vm.provision "shell", inline: <<-SHELL
      curl -sL https://repos.influxdata.com/influxdb.key | apt-key add - source /etc/lsb-release
      echo "deb https://repos.influxdata.com/ubuntu trusty stable" | tee /etc/apt/sources.list.d/influxdb.list
      apt-get update && apt-get install -y influxdb
      service influxdb start

    SHELL

  end

  config.vm.define "test_data1" do |test_data1_cfg|
    test_data1_cfg.vm.hostname = "test-data1"
    test_data1_cfg.vm.network "private_network", ip: "192.168.1.20"
    test_data1_cfg.vm.provision "shell", inline: <<-SHELL
      apt-get install -y python-pip python-dev
      pip install Flask
      sudo apt-get install -y haproxy
      echo "ENABLED=1" > /etc/default/haproxy
      sudo cp /vagrant/haproxy.cfg /etc/haproxy/
      sudo service haproxy restart
      export FLASK_APP=/vagrant/sample.py
      chmod  +x /vagrant/run_servers.sh
      /vagrant/run_servers.sh
      wget https://dl.influxdata.com/telegraf/releases/telegraf_1.0.1_amd64.deb
      sudo dpkg -i telegraf_1.0.1_amd64.deb
      sudo cp /vagrant/telegraf.conf /etc/telegraf/
      sudo service telegraf start
      wget https://grafanarel.s3.amazonaws.com/builds/grafana_3.1.1-1470047149_amd64.deb
      sudo apt-get install -y adduser libfontconfig
      sudo dpkg -i grafana_3.1.1-1470047149_amd64.deb
      sudo service grafana-server start

    SHELL
  end


  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # config.vm.provider "virtualbox" do |vb|
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  #config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end
